# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: windows-2019

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86'#|x64|ARM'
  buildConfiguration: 'Release'
  uwpPackages: '$(build.artifactStagingDirectory)\uwp'
  androidPackages: '$(build.artifactStagingDirectory)\android'
  testPackages: '$(build.artifactStagingDirectory)\test'
  apksignerKeystorePassword: '12341234'
  uwpsignerKeyPassword : '1234'

stages:
- stage: Init
  jobs:
  - job: Install_Nuget
    steps:
      - task: NuGetToolInstaller@1
      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'

- stage: Build_Sign_Android
  dependsOn: Init
  jobs:
  - job: Build_Android
    steps:
      - task: XamarinAndroid@1
        displayName: "build android"
        inputs:
          projectFile: '**/Xamarin.Demo.App.Android.csproj'
          outputDirectory: '$(androidPackages)'
          configuration: '$(buildConfiguration)'
          msbuildArguments: '/p:AndroidUseSharedRuntime=false'
          jdkOption: 'JDKVersion'
  - job: Sign_Android
    steps:
      - task: AndroidSigning@3
        displayName: "sign android"
        inputs:
          apkFiles: '$(androidPackages)/*.apk'
          apksignerKeystoreFile: 'android-keystore.keystore'
          apksignerKeystorePassword: '$(apksignerKeystorePassword)'
          apksignerKeystoreAlias: 'android-keystore'

- stage: Build_Sign_UWP
  dependsOn: Init
  jobs:
    - job: Install_Certificate
      steps:
      - task: DownloadSecureFile@1
        name: signingCert
        displayName: 'Download uwp signing certificate'
        inputs:
          secureFile: 'Xamarin.Demo.App.UWP_TemporaryKey.pfx'
    - job: Build_Uwp
      steps:
      - task: VSBuild@1
        displayName: 'build uwp'
        inputs:
          platform: 'x86'
          solution: '$(solution)'
          configuration: '$(buildConfiguration)'
          msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" 
                        /p:AppxPackageDir="$(uwpPackages)" 
                        /p:AppxBundle=Always 
                        /p:UapAppxPackageBuildMode=StoreUpload 
                        /p:AppxPackageSigningEnabled=true
                        /p:PackageCertificateThumbprint="4D3D3883BA7C0830B284B51842AFEA6EAF3CF79A" 
                        /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"
                        /p:PackageCertificatePassword="1234"'

- stage: Build_UI_Test
  dependsOn: Init
  jobs:
    - job: Build_UI_Test
      steps:
      - task: MSBuild@1
        displayName: "build ui tests"
        inputs:
          solution: '**/*UITest.csproj'
          configuration: '$(buildConfiguration)'
          msbuildArguments: '/p:OutputPath="$(testPackages)"'
          maximumCpuCount: true

- stage: Publish_Artifacts
  dependsOn: Init
  condition: succeeded()
  jobs:
    - job: Publish_Artifacts
      steps:
      - task: PublishBuildArtifacts@1
        displayName: "publish build outputs"
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
