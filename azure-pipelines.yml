# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: windows-2019

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86'#|x64|ARM'
  buildConfiguration: 'Release'
  uwpPackages: '$(build.artifactStagingDirectory)\uwp'
  androidPackages: '$(build.artifactStagingDirectory)\android'
  testPackages: '$(build.artifactStagingDirectory)\test'
  apksignerKeystorePassword: '12341234'
  uwpsignerKeyPassword : '1234'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: NodeTool@0
  inputs:
    versionSpec: '6.x'
    checkLatest: true

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'npm install -g appcenter-cli'
- task: XamarinAndroid@1
  displayName: "build android"
  inputs:
    projectFile: '**/Xamarin.Demo.App.Android.csproj'
    outputDirectory: '$(androidPackages)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/p:AndroidUseSharedRuntime=false'
    jdkOption: 'JDKVersion'

- task: AndroidSigning@3
  displayName: "sign android"
  inputs:
    apkFiles: '$(androidPackages)/*.apk'
    apksignerKeystoreFile: 'android-keystore.keystore'
    apksignerKeystorePassword: '$(apksignerKeystorePassword)'
    apksignerKeystoreAlias: 'android-keystore'

- task: MSBuild@1
  displayName: "build ui tests"
  inputs:
    solution: '**/*UITest.csproj'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/p:OutputPath="$(testPackages)"'
    maximumCpuCount: true

- task: Bash@3
  displayName: "run ui tests on app center"
  inputs:
    targetType: 'inline'
    script: 'appcenter test run uitest --app gokhangulbiz-microsoft.com/xamarin-android-demo --devices gokhangulbiz-microsoft.com/android-device-set --async --app-path ''$(androidPackages)\com.companyname.xamarin.demo.app.apk'' --build-dir ''$(testPackages)'' --uitest-tools-dir ''$(testPackages)'''

# - task: AppCenterTest@1
#   inputs:
#     appFile: '$(androidPackages)\com.companyname.xamarin.demo.app.apk'
#     artifactsDirectory: '$(Build.ArtifactStagingDirectory)\AppCenterTest'
#     frameworkOption: 'uitest'
#     uiTestBuildDirectory: '$(testPackages)'
#     credentialsOption: 'serviceEndpoint'
#     serverEndpoint: 'App Center'
#     appSlug: 'gokhangulbiz-microsoft.com/xamarin-android-demo'
#     devices: 'gokhangulbiz-microsoft.com/android-device-set'
#     localeOption: 'en_US'

- task: DownloadSecureFile@1
  name: signingCert
  displayName: 'Download uwp signing certificate'
  inputs:
    secureFile: 'Xamarin.Demo.App.UWP_TemporaryKey.pfx'

- task: VSBuild@1
  displayName: 'build uwp'
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" 
                  /p:AppxPackageDir="$(uwpPackages)" 
                  /p:AppxBundle=Always 
                  /p:UapAppxPackageBuildMode=StoreUpload 
                  /p:AppxPackageSigningEnabled=true
                  /p:PackageCertificateThumbprint="4D3D3883BA7C0830B284B51842AFEA6EAF3CF79A" 
                  /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"
                  /p:PackageCertificatePassword="1234"'

- task: PublishBuildArtifacts@1
  displayName: "publish build outputs"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
